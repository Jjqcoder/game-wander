# 定义全局配置
user nginx;  # 指定 Nginx 运行的用户
worker_processes auto;  # 自动根据 CPU 核心数分配工作进程

# 定义错误日志路径
error_log /var/log/nginx/error.log warn;

# 定义 PID 文件路径
pid /var/run/nginx.pid;

# 定义事件模块
events {
    worker_connections 1024;  # 每个工作进程的最大连接数
}

http {
    # 定义日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 定义访问日志路径
    access_log /var/log/nginx/access.log main;

    # 定义默认字符集
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # 定义 MIME 类型
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 新增：定义后端 Node.js 服务上游
    upstream node_backend {
        server 120.27.159.194:3001;
        keepalive 64;  # 保持长连接提升性能
    }

    # 主服务器配置（HTTPS）
    server {
        listen 80 ssl;
        server_name www.wbeishangw.top wbeishangw.top;  # 指定域名

        # 使用新的证书(同一个域名下的各个前端项目可以共用证书)（Let's Encrypt）
        ssl_certificate /etc/nginx/cert/fullchain.pem;
        ssl_certificate_key /etc/nginx/cert/privkey.pem;
        ssl_trusted_certificate /etc/nginx/cert/chain.pem;

        # 强化 HTTPS 安全性
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 新增：安全响应头（注释说明作用）
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # 强制 HTTPS
        add_header X-Content-Type-Options "nosniff";  # 禁止 MIME 嗅探
        add_header X-Frame-Options "SAMEORIGIN";  # 防点击劫持

        # 定义静态文件根目录
        root /usr/share/nginx/html;
        index index.html index.htm;  # 定义默认索引文件

        # 处理静态文件请求
        location /game-wander/ {
            try_files $uri $uri/ @backend;  # 尝试提供请求的文件，如果不存在则代理到后端
        }

        # 代理到后端的配置
        location @backend {
            proxy_pass http://node_backend;
            
            # 确保这些关键头部设置正确
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # 这个特别重要，告诉后端是HTTPS请求
            
            # WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # 错误页面配置
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # 定义错误页面的路径
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # 非 www 跳转到 www（保持原有逻辑）
        if ($host = wbeishangw.top) {
            return 301 https://www.$host$request_uri;
        }
    }

    # HTTP 强制跳转 HTTPS（保持原有配置）
    server {
        listen 80;
        server_name www.wbeishangw.top wbeishangw.top;
        return 301 https://www.wbeishangw.top$request_uri;  # 统一跳转到 www
    }
}